version: '2'

services:
  # this is our kafka cluster.
  kafka-cluster:
    image: landoop/fast-data-dev:latest
    environment:
      ADV_HOST: 127.0.0.1         # Change to 192.168.99.100 if using Docker Toolbox
      RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
    ports:
      - 2181:2181                 # Zookeeper
      - 3030:3030                 # Landoop UI
      - 8081-8083:8081-8083       # REST Proxy, Schema Registry, Kafka Connect ports
      - 9581-9585:9581-9585       # JMX Ports
      - 9092:9092                 # Kafka Broker

  # we will use elasticsearch as one of our sinks.
  # This configuration allows you to start elasticsearch
  elasticsearch:
      image: elasticsearch:8.6.0
      environment:
        discovery.type: single-node
        xpack.security.enabled: false
        xpack.security.http.ssl.enabled: false
        http.port: 9200
        http.cors.enabled: true
        http.cors.allow-origin: http://localhost:1358,http://127.0.0.1:1358
        http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
        http.cors.allow-credentials: true
        bootstrap.memory_lock: true
        ES_JAVA_OPTS: -Xms512m -Xmx512m
      ports:
        - "9200:9200"
      ulimits:
        memlock:
          soft: -1
          hard: -1

  # search engine
  # elasticsearch browser
  dejavu:
    image: appbaseio/dejavu:3.6.0
    container_name: dejavu
    ports:
      - 1358:1358
    links:
      - elasticsearch

  # we will use postgres as one of our sinks.
  # This configuration allows you to start postgres
  postgres:
    image: postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres     # define credentials
      POSTGRES_PASSWORD: postgres # define credentials
      POSTGRES_DB: postgres       # define database
    ports:
      - 5432:5432                 # Postgres port
